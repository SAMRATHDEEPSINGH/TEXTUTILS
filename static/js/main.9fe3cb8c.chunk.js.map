{"version":3,"sources":["Components/Navbar.js","Components/Alert.js","Components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","AboutText","role","placeholder","class","onClick","toggleMode","htmlFor","defaultProps","Alert","alert","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","showalert","console","log","document","getElementById","select","navigator","clipboard","writeText","split","join","length","App","setMode","_useState3","_useState4","setAlert","showAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9fe3cb8c.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link\" to=\"/about\">{props.AboutText}</Link> */}\r\n                <a className=\"nav-link\" href=\"#\">{props.AboutText}</a>\r\n              </li>\r\n            </ul>\r\n            <form className=\"d-flex\" role=\"search\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n            </form>\r\n            <div class={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n              <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  AboutText: PropTypes.string.isRequired,\r\n}\r\n\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Set title here',\r\n  AboutText: 'About text here'\r\n}","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    const capitalize=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n            {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick=()=>{\r\n        // console.log(\"Upper Case was Clicked\"+text);\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showalert(\"Converted to UpperCase\",\"success\")\r\n    }\r\n    const handleDownClick=()=>{\r\n        // console.log(\"Upper Case was Clicked\"+text);\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n        props.showalert(\"Converted to LowerCase\",\"success\")\r\n    }\r\n    const handleClearClick=()=>{\r\n        // console.log(\"Upper Case was Clicked\"+text);\r\n        setText(\"\");\r\n        props.showalert(\"Text cleared Successfull\",\"success\")\r\n    }\r\n    const handleOnChange=(event)=>{\r\n        // console.log(\"On change\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const handleCopy=()=>{\r\n      console.log(\"Text copied\");\r\n      var text=document.getElementById(\"myBox\");\r\n      text.select();\r\n      navigator.clipboard.writeText(text.value);\r\n      props.showalert(\"Copied Text\",\"success\")\r\n    }\r\n\r\n    const handleExtraSpaces=()=>{\r\n      let newText=text.split(/[ ]+/);\r\n      setText(newText.join(\" \"))\r\n      props.showalert(\"Extra Spaced Removed\",\"success\")\r\n    }\r\n    const [text, setText]= useState('');\r\n    // text=\"new text\";  //Wrong way to change the state\r\n    // setText(\"Nextt\");\r\n  return (\r\n    <>\r\n      <div className='container' style={{color:props.mode==='light'?'black':'white'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" placeholder='Type Something here' value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='light'?'white':'grey',color:props.mode==='light'?'black':'white'}} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleDownClick}>Convert to LowerCase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear All</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy Text</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n      </div>\r\n      <div className=\"container my-2\" style={{color:props.mode==='light'?'black':'white'}}>\r\n        <h2>Your Text summary</h2>\r\n        <p>{text.split(\" \").length} words {text.length} characters</p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes to read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter Something in textbox to preview here\"}</p>\r\n      </div>\r\n      </>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport Alert from './Components/Alert';\nimport TextForm from './Components/TextForm';\n// import About from './Components/About';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light'); //whether dark mode is enabled or not.\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 3000);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark')\n      document.body.style.backgroundColor = '#191f26'\n      showAlert(\"Dark mode Enabled\", \"success\")\n      document.title = 'TextUtils Dark-Mode';\n      // setInterval(() => {\n      //   document.title='TextUtils is Amazing Mode';\n      // },2000 );\n      // setInterval(() => {\n      //   document.title='Install TextUtils Now';\n      // }, 1500);\n    }\n    else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Light Mode Enabled\", \"success\")\n      document.title = 'TextUtils Light-Mode';\n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n        {/* <Navbar title=\"Samrath_Portfolio\" AboutText=\"About_Me\" /> */}\n        {/* <Navbar/> */}\n        <Navbar title=\"Samrath_Portfolio\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Routes>\n            <Route exact path=\"/about\" element={<About/>}>\n            </Route>\n            <Route exact path=\"/\" element={<TextForm heading=\"Enter the Text to analyze\" mode={mode} showalert={showAlert} /> }>\n            </Route>\n          </Routes> */}\n              <TextForm heading=\"Enter the Text to analyze\" mode={mode} showalert={showAlert} />\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();"],"sourceRoot":""}